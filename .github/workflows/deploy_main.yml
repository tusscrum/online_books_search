name: deploy pipeline

on:
  push:
    branches:
      - main
env:
  AWS_DEFAULT_REGION: us-east-1
  MONGODB_URL: ${{ secrets.MONGODB_URL }}
  GOOGLE_BOOKS_API_KEY: ${{ secrets.GOOGLE_BOOKS_API_KEY }}



jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: set up environment
        run: |
          echo "MONGODB_URL = None"  >> conf.py
          echo "GOOGLE_BOOKS_API_KEY = None" >> conf.py
          export MONGODB_URL=$MONGODB_URL
          export GOOGLE_BOOKS_API_KEY=$GOOGLE_BOOKS_API_KEY
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 pytest
      - name: Run Flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Run pytest
        run:
          echo "running pytests"
  #          pytest



  deploy:
    runs-on: ubuntu-latest
    #    needs: test
    steps:
      - name: deploy to aws
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            if [ ! -d "/home/ubuntu/" ]; then
            mkdir /home/ubuntu/
            fi
            cd /home/ubuntu/
            if [ ! -d "/home/ubuntu/online_books_search/" ]; then
            git clone https://github.com/tusscrum/online_books_search.git
            fi
            cd online_books_search
            if [ ! -d "/home/ubuntu/online_books_search/venv/" ]; then
            python3 -m venv venv
            fi
            source venv/bin/activate
            git pull
            pip3 install --upgrade pip
            pip3 install -r requirements.txt
            export MONGODB_URL=$MONGODB_URL
            export GOOGLE_BOOKS_API_KEY=$GOOGLE_BOOKS_API_KEY
            cp ../conf.py conf.py
            kill -9 $(lsof -t -i:8080)
            nohup uvicorn main:app --host 0.0.0.0 --port 8080 > /dev/null 2>&1 & disown
            
            


            

